package com.nanolaba.nrg.widgets;

import com.nanolaba.logging.LOG;
import com.nanolaba.nrg.core.Generator;
import org.apache.commons.lang3.StringUtils;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;

import static org.junit.jupiter.api.Assertions.*;

class ImportWidgetTest {

    @Test
    public void testImportAndTOC() throws IOException {
        File sourceFile = new File(getClass().getClassLoader().getResource("ImportWidgetTest/testTOC/test.src.md").getFile());
        Generator generator = new Generator(sourceFile, StandardCharsets.UTF_8);

        String bodyEn = generator.getResult("en").getContent().toString();
        LOG.info(bodyEn);
        assertTrue(bodyEn.contains("## HEADER1"));
        assertTrue(bodyEn.contains("## HEADER2"));
        assertTrue(bodyEn.contains("1. [HEADER1](#header1)"));
        assertTrue(bodyEn.contains("2. [HEADER2](#header2)"));

    }

    @Test
    public void testImportForDifferentLanguages() throws IOException {
        File sourceFile = new File(getClass().getClassLoader().getResource("ImportWidgetTest/testImportForDifferentLanguages/test.src.md").getFile());
        Generator generator = new Generator(sourceFile, StandardCharsets.UTF_8);

        String bodyEn = generator.getResult("en").getContent().toString();
        LOG.info(bodyEn);
        assertTrue(bodyEn.contains("Test"));

        String bodyRu = generator.getResult("ru").getContent().toString();
        LOG.info(bodyRu);
        assertTrue(bodyRu.contains("Тест"));
    }

    @Test
    public void testLanguagesWidget() throws IOException {
        File sourceFile = new File(getClass().getClassLoader().getResource("ImportWidgetTest/README.src.md").getFile());
        Generator generator = new Generator(sourceFile, StandardCharsets.UTF_8);

        String bodyEn = generator.getResult("en").getContent().toString();
        LOG.info(bodyEn);

        assertEquals(1, StringUtils.countMatches(bodyEn, "<!-- This file was automatically generated by Nanolaba Readme Generator"));

        // test.txt
        assertTrue(bodyEn.contains("Hello world!"));

        // folder/test.txt
        assertTrue(bodyEn.contains("Text from file in a folder."));

        // folder/testWin1251.txt
        assertTrue(bodyEn.contains("Текст в кодировке win1251"));

        // folder/test.src.md
        assertFalse(bodyEn.contains("<!--@testParameter=foo-->"));
        assertFalse(bodyEn.contains("${testParameter}"));
        assertTrue(bodyEn.contains("foobar"));
        assertFalse(bodyEn.contains("test1: ${globalParameter}"));
        assertTrue(bodyEn.contains("test1: This parameter is visible in all imported files"));

        // folder/test-no-generation.src.md
        assertFalse(bodyEn.contains("<!--@unprocessedParameter=bar-->"));
        assertTrue(bodyEn.contains("foo${unprocessedParameter}"));
    }
}